var cheerio = require('cheerio'),
    nquery = require('nquery'),
    message = require('./message.json'),
    body = message.body,
    options = message.options;
setInterval(function() {}, 10000);

var _done = false,
    sandbox = {
        referer     :   options.referer,
        Queue       :   [],
        variables   :   {},
        options     :   options,
        result      :   {},
        Done        :   function(  ) {
            console.debug('rcvd Done');
            _done = true;
//            process.send({
//                cmd     :   'done',
//                result  :   sandbox
//            });
        }
    },
    Rules = require( options.ruleFile ),
    rules = Rules && Rules[ options.ruleGroup ] || null;
if ( !rules ) {
    console.warn( 'Rules not found!' );
    return sandbox.Done();
}

try {
    if ( typeof body == 'string' ) {
//        var $ = nquery.createHtmlDocument( body, 'utf-8' );
        var $ = cheerio.load( body, 'utf-8' );
        console.log('OK!!!');
    } else
        var $ = null;
} catch ( e ) {
    console.debug(e);
    throw e;
}
try {
    console.debug('ok', options.rulePoint, rules[ options.rulePoint ]);
    rules[ options.rulePoint ]
        && typeof rules[ options.rulePoint ] == 'function'
        && !rules[ options.rulePoint ]( sandbox, $, body )
    || !console.error( 'Rule ' + options.ruleGroup + '::' + options.rulePoint + ' not found!' ) && sandbox.Done();
    console.debug('ok');
} catch(error) {
    throw error;
    console.debug('throw Error; ', error);
}

if ( !_done ) console.fatal( new Error('Lost self.Done() in ' + options.rules + '::' + options.rule) );
/*
require('lo')
var libxmljs = require('libxmljs');
var doc = libxmljs.parseHtmlString(body);
//console.inspect(body);
console.inspect(doc.find('//' + 'body')[0].attr('class').value());
*/
